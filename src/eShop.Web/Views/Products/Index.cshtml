@model ProductCatalogViewModel
@{
    ViewData["Title"] = "All Products";
    var currentPage = @Model.Products!.Metadata.CurrentPage;
    var pageSize = @Model.Products!.Metadata.PageSize;
    var total = @Model.Products!.Metadata.TotalCount;
    var from = (currentPage - 1) * pageSize + 1;
    var to = Math.Min(total, currentPage * pageSize);
}
@section Scripts {
    <script src="~/js/catalogFilters.js"></script>
    <script src="~/js/catalogControls.js"></script>
}

<div class="container-fluid mt-5">
    <div class="page-header px-2">
        <h1>@ViewData["Title"]</h1>
    </div>

    <div class="container-fluid mt-5">
        <p>Showing @from - @to of @total products</p>
        @if (Model.Products is not null && Model.Products.Items.Any())
        {
            <div class="row">
                <div class="col-12 col-md-3 py-3">
                    <partial name="_CatalogFilterPartial" model="@(Model.CurrentParams, Model.CatalogFilterViewModel)" />
                </div>
                <div class="col-12 col-md-9">
                    <div class="row row-cols-1">
                        <partial name="_CatalogControlsPartial"
                            model="@(Model.CurrentParams, Model.CatalogControlsViewModel)" />
                    </div>
                    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
                        @foreach (var product in Model.Products.Items)
                        {
                            <partial name="_ProductCardPartial" model="@product"></partial>
                        }
                    </div>
                    <pager metadata="@Model.Products.Metadata" page-action="Index" page-class="btn"
                        page-class-normal="btn-secondary" page-class-selected="btn-success"></pager>
                </div>
            </div>
        }
        else
        {
            <p>No products available.</p>
        }

    </div>
</div>
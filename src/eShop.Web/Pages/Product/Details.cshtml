@page "{id:int}"
@using eShop.Web.Pages
@model DetailsModel
@{
    ViewData["Title"] = Model.Product?.Name ?? "Product Not Found";
    Layout = "_Layout";
}

@if (Model.Product is null)
{
    <div class="container mt-5 text-center">
        <div class="alert alert-warning" role="alert">
            <h2><i class="bi bi-exclamation-triangle"></i> Product Not Found</h2>
            <p>The product you're looking for is no longer available or may have been removed.</p>
            <a href="/" class="btn btn-primary mt-3">Return to Homepage</a>
        </div>
    </div>
}
else
{
    <div class="container mt-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/category/@Model.Product.CategoryId">@Model.Product.CategoryName</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Product.Name</li>
            </ol>
        </nav>
        
        <div class="row mt-4">
            <!-- Product Images Gallery -->
            <div class="col-md-6 mb-4">
                @if (Model.Product.Images.Any())
                {
                    <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @foreach (var image in Model.Product.Images.Select((img, i) => new { Img = img, Index = i }))
                            {
                                <div class="carousel-item @(image.Index == 0 ? "active" : "")">
                                    <img src="@image.Img.Url" class="d-block w-100 img-fluid rounded" alt="@Model.Product.Name">
                                </div>
                            }
                        </div>
                        @if (Model.Product.Images.Count > 1)
                        {
                            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        }
                    </div>
                    
                    <!-- Thumbnail Navigation -->
                    @if (Model.Product.Images.Count > 1)
                    {
                        <div class="row mt-2">
                            @foreach (var thumb in Model.Product.Images.Select((img, i) => new { Img = img, Index = i }))
                            {
                                <div class="col-3 mb-2">
                                    <img src="@thumb.Img.Url" class="img-thumbnail" 
                                         alt="Thumbnail" onclick="$('#productCarousel').carousel(@thumb.Index)"
                                         style="cursor:pointer;">
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="card">
                        <div class="card-body text-center py-5">
                            <i class="bi bi-image" style="font-size: 5rem; color: #ccc;"></i>
                            <p class="text-muted mt-3">No images available</p>
                        </div>
                    </div>
                }
            </div>
            
            <!-- Product Information -->
            <div class="col-md-6">
                <div class="mb-3">
                    <h1 class="mb-1">@Model.Product.Name</h1>
                    <div class="d-flex align-items-center mb-2">
                        <div class="me-2">
                            @{
                                var rating = Model.Product.AverageRating;
                                for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= Math.Floor(rating))
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                    else if (i - rating < 1 && i - rating > 0)
                                    {
                                        <i class="bi bi-star-half text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star text-warning"></i>
                                    }
                                }
                            }
                        </div>
                        <small class="text-muted">(@Model.Product.Reviews.Count reviews)</small>
                    </div>
                </div>
                
                <div class="mb-4">
                    <h2 class="text-danger fw-bold">$@Model.Product.BasePrice.ToString("0.00")</h2>
                    @if (!Model.Product.IsActive)
                    {
                        <div class="badge bg-danger mb-2">Currently Unavailable</div>
                    }
                    else if (Model.Product.QuantityInStock.HasValue && Model.Product.QuantityInStock.Value <= 5)
                    {
                        <div class="badge bg-warning text-dark mb-2">Only @Model.Product.QuantityInStock left in stock!</div>
                    }
                </div>
                
                @if (!string.IsNullOrEmpty(Model.Product.ShortDescription))
                {
                    <div class="mb-4">
                        <p class="lead">@Model.Product.ShortDescription</p>
                    </div>
                }
                
                <!-- Product Variants Selection -->
                @if (Model.Product.HasVariants && Model.Product.Variants.Any())
                {
                    <div class="mb-4">
                        <h5>Options</h5>
                        <form>
                            <select class="form-select mb-3">
                                <option selected>Select variant</option>
                                @foreach (var variant in Model.Product.Variants)
                                {
                                    <option value="@variant.Id">@variant.Name - $@variant.Price.ToString("0.00")</option>
                                }
                            </select>
                        </form>
                    </div>
                }
                
                <!-- Product Attributes -->
                @if (Model.Product.Attributes.Any())
                {
                    <div class="mb-4">
                        <h5>Specifications</h5>
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <tbody>
                                    @foreach (var attr in Model.Product.Attributes)
                                    {
                                        <tr>
                                            <th scope="row">@attr.Name</th>
                                            <td>@attr.Value</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                
                <!-- Add to Cart -->
                <div class="mb-4">
                    <div class="d-flex">
                        <input type="number" class="form-control me-2" style="max-width: 100px;" value="1" min="1" 
                               max="@(Model.Product.QuantityInStock ?? 100)" />
                        <button class="btn btn-primary flex-grow-1">
                            <i class="bi bi-cart-plus"></i> Add to Cart
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Product Description & Reviews -->
        <div class="row mt-5">
            <div class="col-12">
                <ul class="nav nav-tabs" id="productTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="description-tab" data-bs-toggle="tab" 
                                data-bs-target="#description" type="button" role="tab" 
                                aria-controls="description" aria-selected="true">Description</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" 
                                data-bs-target="#reviews" type="button" role="tab" 
                                aria-controls="reviews" aria-selected="false">Reviews (@Model.Product.Reviews.Count)</button>
                    </li>
                </ul>
                <div class="tab-content p-4 border border-top-0 rounded-bottom" id="productTabsContent">
                    <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
                        <div class="product-description">
                            @Html.Raw(Model.Product.Description)
                        </div>
                    </div>
                    <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
                        @if (Model.Product.Reviews.Any())
                        {
                            <div class="mb-4">
                                <h4>Customer Reviews</h4>
                                <div class="d-flex align-items-center mb-3">
                                    <h2 class="mb-0 me-2">@Model.Product.AverageRating.ToString("0.0")</h2>
                                    <div>
                                        <div>
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Floor(Model.Product.AverageRating))
                                                {
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                }
                                                else if (i - Model.Product.AverageRating < 1 && i - Model.Product.AverageRating > 0)
                                                {
                                                    <i class="bi bi-star-half text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-star text-warning"></i>
                                                }
                                            }
                                        </div>
                                        <small class="text-muted">Based on @Model.Product.Reviews.Count reviews</small>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="review-list">
                                @foreach (var review in Model.Product.Reviews.OrderByDescending(r => r.CreatedDate))
                                {
                                    <div class="card mb-3">
                                        <div class="card-body">
                                            <div class="d-flex justify-content-between">
                                                <div>
                                                    <h5 class="mb-1">@review.Title</h5>
                                                    <div class="mb-2">
                                                        @for (int i = 1; i <= 5; i++)
                                                        {
                                                            if (i <= review.Rating)
                                                            {
                                                                <i class="bi bi-star-fill text-warning"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="bi bi-star text-warning"></i>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <small class="text-muted">@review.CreatedDate.ToString("MMM dd, yyyy")</small>
                                            </div>
                                            <p class="mb-1">Comment</p>
                                            <footer class="text-muted small">By Username</footer>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-5">
                                <i class="bi bi-chat" style="font-size: 3rem; color: #ccc;"></i>
                                <p class="mt-3">No reviews yet. Be the first to review this product!</p>
                            </div>
                        }
                        
                        <!-- Write a Review Form -->
                        <div class="mt-4">
                            <h5>Write a Review</h5>
                            <form>
                                <div class="mb-3">
                                    <label for="reviewTitle" class="form-label">Title</label>
                                    <input type="text" class="form-control" id="reviewTitle" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Rating</label>
                                    <div>
                                        <div class="rating">
                                            @for (int i = 5; i >= 1; i--)
                                            {
                                                <input type="radio" id="star@i" name="rating" value="@i" />
                                                <label for="star@i"><i class="bi bi-star-fill"></i></label>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="reviewComment" class="form-label">Review</label>
                                    <textarea class="form-control" id="reviewComment" rows="3" required></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">Submit Review</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Related Products -->
        <div class="row mt-5">
            <div class="col-12">
                <h3 class="mb-4">You May Also Like</h3>
                <!-- This would be implemented in your controller to show related products -->
                <!-- Placeholder for demonstration purposes -->
                <div class="row">
                    @for (int i = 0; i < 4; i++)
                    {
                        <div class="col-md-3 col-6 mb-4">
                            <div class="card h-100">
                                <div class="bg-light" style="height: 200px; display: flex; align-items: center; justify-content: center;">
                                    <i class="bi bi-image" style="font-size: 3rem; color: #ddd;"></i>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title text-truncate">Related Product</h5>
                                    <p class="card-text text-danger">$XX.XX</p>
                                    <a href="#" class="btn btn-sm btn-outline-primary">View Details</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

@section Styles {
    <style>
        /* Star Rating System */
        .rating {
            display: inline-flex;
            flex-direction: row-reverse;
            gap: 3px;
        }
        
        .rating input {
            display: none;
        }
        
        .rating label {
            color: #ddd;
            font-size: 1.5rem;
            cursor: pointer;
        }
        
        .rating input:checked ~ label,
        .rating input:hover ~ label {
            color: #ffc107;
        }
        
        /* Product Description */
        .product-description {
            line-height: 1.7;
        }
        
        .product-description img {
            max-width: 100%;
            height: auto;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize product image carousel
            var productCarousel = document.querySelector('#productCarousel')
            if (productCarousel) {
                new bootstrap.Carousel(productCarousel)
            }
            
            // Handle rating selection
            $('.rating input').change(function() {
                $(this).parent().find('label').css('color', '#ddd');
                $(this).parent().find('label').slice(0, $(this).parent().find('input').index(this) + 1).css('color', '#ffc107');
            });
        });
    </script>
}